package algorithms;
import java.math.BigInteger; 
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest; 
import java.security.NoSuchAlgorithmException; 
  
// Java program to calculate SHA hash value 
  
class sha256 { 
    public static byte[] getSHA(String input) throws NoSuchAlgorithmException
    { 
        MessageDigest md = MessageDigest.getInstance("MD5"); 
  
        return md.digest(input.getBytes(StandardCharsets.UTF_8)); 
    }
    
    public static String toHexString(byte[] hash)
    { 
        BigInteger number = new BigInteger(1, hash);  
        StringBuilder hexString = new StringBuilder(number.toString(16)); 	
        
        while (hexString.length() < 32) 
        { 
            hexString.insert(0, '0'); 
        } 
  
        return hexString.toString(); 
    }
      
    public static void main(String args[])
    { 
    	long startTime = System.nanoTime();
        try 
        {
            String s1 = "-}{_/+({[[<)=)}{/.?}]=~.]{})-}{<{.~@?[~(}~.#),+]-{(=_<?;@+()(/=)/~>};[?:.=+{>@[/{)>){}-@{<><+,-'_}->]>)[_'='>{>-};,<~;}~;;})~)/(-,]];<(,_'#;=?/<:',??-+@')')+~]-#;-#}#<#=]~((>?#_(}];+<:,>;(?#):>{)?;'+]<;]?{][)+(}'-->{[{:[+<_[?=~_{/_{@<'')}#,.?_,?}?@=.}}_;+[[=>=[//}=({_,/./}-).}([,@?##/}#<'{-={:+]>.#)>-_{/}_+{)>[{(;'};[>@},=]/'+~<({?;~/~(+?:{<=-(~+{;?__+#>]){((,}=>[_>-@~:{#]:<_~'}-{{=~]'.#>]./{;_/.}<{/{<(+/[~:<>{>,}__#{}}@:?+<~/-}<'@@.'{;>=><"; 
            System.out.println("HashCode Generated by SHA-256 for: "+s1); 		
  
            System.out.println("\n"+ toHexString(getSHA(s1))); 
        }
        // For specifying wrong message digest algorithms 
        catch (NoSuchAlgorithmException e) { 
            System.out.println("Exception thrown for incorrect algorithm: " + e); 
        }
        long stopTime = System.nanoTime();
        System.out.println(stopTime - startTime);
    } 
}